var searchIndex = new Map(JSON.parse('[\
["zksync_vm2",{"t":"PTGFPPPPPPPFFPGFPPFFPFKFPFKFCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMMNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOENNNNNNNNNNNNNMOONNONONNNNNONCNNNNNNMNNNNNNNNNNONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNFPPFPPGGFFPFPPFFFFPPPFFGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSFFFKSSNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNN","n":["Always","EMPTY","ExecutionEnd","FatPointer","IfEQ","IfGE","IfGT","IfGTOrLT","IfLE","IfLT","IfNotEQ","Instruction","ModeRequirements","Panicked","Predicate","Program","ProgramFinished","Reverted","Settings","Snapshot","StoppedByTracer","StorageChange","StorageInterface","StorageSlot","SuspendedOnHook","VirtualMachine","World","WorldDiff","addressing_modes","after","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callframe","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","code_page","context_u128_register","cost_of_writing_storage","current_frame","decommit","decommit_code","decommitted_hashes","default","default","default_aa_code_hash","eq","eq","eq","eq","events","events_after","evm_interpreter_code_hash","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_add","from_and","from_aux_heap_read","from_aux_heap_store","from_aux_mutating","from_caller","from_code_address","from_context_meta","from_context_sp","from_context_u128","from_decommit","from_div","from_ergs_left","from_event","from_far_call","from_heap_read","from_heap_write","from_increment_tx_number","from_invalid","from_jump","from_l2_to_l1_message","from_mul","from_near_call","from_nop","from_or","from_panic","from_pointer_add","from_pointer_pack","from_pointer_read","from_pointer_shrink","from_pointer_sub","from_precompile_call","from_ret","from_revert","from_rotate_left","from_rotate_right","from_set_context_u128","from_shift_left","from_shift_right","from_storage_read","from_storage_write","from_sub","from_this","from_transient_storage_read","from_transient_storage_write","from_words","from_xor","get_storage_changes","get_storage_changes_after","get_storage_state","get_transient_storage","get_transient_storage_state","hash","hook_address","interface","into","into","into","into","into","into","into","into","into","into","into","into","into_u256","is_free_storage_slot","is_initial","is_write_initial","l2_to_l1_logs","l2_to_l1_logs_after","length","make_snapshot","memory_page","new","new","new","none","number_of_callframes","offset","pop_snapshot","precompiles","precompiles","pubdata","pubdata_costs","read_heap_byte","read_heap_u256","read_register","read_storage","read_storage_value","resume_with_additional_gas_limit","rollback","run","set_context_u128_register","set_flags","set_pubdata","set_register","set_transaction_number","snapshot","start","storage_refunds","testonly","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_number","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world_diff","write_heap_u256","write_transient_storage","AbsoluteStack","AbsoluteStack","AbsoluteStack","AdvanceStackPointer","AdvanceStackPointer","AdvanceStackPointer","AnyDestination","AnySource","Arguments","CodePage","CodePage","Immediate1","Immediate1","Immediate1","Immediate2","NotRegisterOrImmediate","Register","Register1","Register1","Register1","Register1","Register2","RegisterAndImmediate","RegisterOrImmediate","RelativeStack","RelativeStack","RelativeStack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","immediate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","register","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ECRECOVER_INNER_FUNCTION_PRECOMPILE_ADDRESS","KECCAK256_ROUND_FUNCTION_PRECOMPILE_ADDRESS","LegacyPrecompiles","PrecompileMemoryReader","PrecompileOutput","Precompiles","SECP256R1_VERIFY_PRECOMPILE_ADDRESS","SHA256_ROUND_FUNCTION_PRECOMPILE_ADDRESS","assume_offset_in_words","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_precompile","call_precompile","clone","clone_into","clone_to_uninit","default","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into_iter","len","next","size_hint","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_cycle_stats","TestWorld","borrow","borrow_mut","cost_of_writing_storage","decommit","decommit_code","fmt","from","into","is_free_storage_slot","new","read_storage","try_from","try_into","type_id","vzip"],"q":[[0,"zksync_vm2"],[284,"zksync_vm2::addressing_modes"],[540,"zksync_vm2::precompiles"],[591,"zksync_vm2::testonly"],[607,"zksync_vm2::vm"],[608,"zksync_vm2_interface::state_interface"],[609,"zksync_vm2_interface::tracer_interface"],[610,"zksync_vm2::program"],[611,"zksync_vm2::mode_requirements"],[612,"zksync_vm2::predication"],[613,"zksync_vm2::world_diff"],[614,"primitive_types"],[615,"alloc::vec"],[616,"core::iter::traits::iterator"],[617,"zksync_vm2::instruction"],[618,"core::fmt"],[619,"zksync_vm2::fat_pointer"],[620,"core::option"],[621,"core::hash"],[622,"core::result"],[623,"core::any"],[624,"zksync_vm2::precompiles::legacy"],[625,"ethereum_types"],[626,"zkevm_opcode_defs::system_params"]],"i":[10,13,0,0,10,10,10,10,10,10,10,0,0,26,0,0,26,26,0,0,26,0,0,0,26,0,0,0,0,27,27,30,8,33,26,9,10,11,3,22,12,27,13,30,8,33,26,9,10,11,3,22,12,27,13,3,8,9,10,11,12,13,8,9,10,11,12,13,8,9,9,10,10,11,12,13,13,8,3,18,3,7,7,22,10,22,11,8,26,12,27,3,22,11,3,30,8,33,26,9,10,11,3,22,12,27,13,30,8,33,33,33,26,9,10,11,3,22,12,27,13,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,8,30,22,22,3,3,3,10,11,0,30,8,33,26,9,10,11,3,22,12,27,13,33,18,27,13,3,22,33,3,33,8,9,3,9,3,33,3,0,7,3,22,3,3,3,18,18,3,3,3,3,3,3,3,3,22,33,22,0,8,9,10,11,12,13,3,30,8,33,26,9,10,11,3,22,12,27,13,30,8,33,26,9,10,11,3,22,12,27,13,30,8,33,26,9,10,11,3,22,12,27,13,13,30,8,33,26,9,10,11,3,22,12,27,13,3,3,3,0,35,37,0,35,37,0,0,0,0,35,0,35,39,0,0,0,0,35,39,37,0,0,0,0,35,37,38,40,36,42,43,55,56,57,44,58,59,35,39,60,37,38,40,36,42,43,55,56,57,44,58,59,35,39,60,37,40,36,42,43,55,56,57,44,58,59,35,39,37,40,36,42,43,55,56,57,44,58,59,35,39,37,40,40,36,36,42,42,43,43,55,55,56,56,57,57,44,44,58,58,59,59,35,35,39,39,37,37,38,40,36,42,43,55,56,57,44,58,59,35,39,60,37,38,40,36,42,43,55,56,57,44,58,59,35,35,35,35,35,35,35,39,39,39,60,37,37,37,37,37,55,38,40,36,42,43,55,56,57,44,58,59,35,39,60,37,38,59,55,40,36,42,43,55,56,57,44,58,59,35,39,37,38,40,36,42,43,55,56,57,44,58,59,35,39,39,60,37,38,40,36,42,43,55,56,57,44,58,59,35,35,35,35,35,35,35,39,39,39,60,37,37,37,37,37,38,40,36,42,43,55,56,57,44,58,59,35,39,60,37,38,40,36,42,43,55,56,57,44,58,59,35,39,60,37,0,0,0,0,0,0,0,0,61,64,61,63,64,61,63,49,64,61,61,61,63,64,61,63,64,61,63,63,63,63,64,61,63,61,61,61,61,61,64,61,63,64,61,63,64,61,63,64,61,63,63,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67],"f":"```````````````````````````````{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{dc}}}{{b{de}}}{}{}}00000000000{{{b{d{f{ce}}}}h}{{`{j}}}l{{n{c}}}}{{{b{{A`{ce}}}}}{{A`{ce}}}{}{}}{{{b{Ab}}}Ab}{{{b{Ad}}}Ad}{{{b{Af}}}Af}{{{b{Ah}}}Ah}{{{b{Aj}}}Aj}{{{b{c}}{b{de}}}Al{}{}}00000{{{b{c}}}Al{}}00000000{{{b{{A`{ce}}}}}{{b{{B`{An}}}}}{}{}}{{{b{{f{ce}}}}}Bbl{{n{c}}}}{{{b{dBd}}AjAn}Bf}{{{b{d{f{ce}}}}}{{`{j}}}l{{n{c}}}}{{{b{dn}}An}{{A`{cn}}}l}{{{b{dn}}An}{{Bj{Bh}}}}{{{b{Bl}}}{{`{{C`{}{{Bn{An}}}}}}}}{{}Ad}{{}Bl}`{{{b{{A`{ce}}}}{b{{A`{ce}}}}}Cb{}{}}{{{b{Cd}}{b{Cd}}}Cb}{{{b{Ah}}{b{Ah}}}Cb}{{{b{Cf}}{b{Cf}}}Cb}{{{b{{f{ce}}}}}{{`{{C`{}{{Bn{Ch}}}}}}}l{{n{c}}}}{{{b{Bl}}{b{Ah}}}{{b{{B`{Ch}}}}}}`{{{b{{f{ce}}}}}Cjl{{n{c}}}}{{{b{{Cl{ce}}}}{b{dCn}}}D`{}{}}{{{b{{A`{ce}}}}{b{dCn}}}D`{}{}}{{{b{Db}}{b{dCn}}}D`}{{{b{Cd}}{b{dCn}}}D`}{{{b{Ab}}{b{dCn}}}D`}{{{b{Ad}}{b{dCn}}}D`}{{{b{Af}}{b{dCn}}}D`}{{{b{{f{ce}}}}{b{dCn}}}D`DdDd}{{{b{Bl}}{b{dCn}}}D`}{{{b{Ah}}{b{dCn}}}D`}{{{b{Cf}}{b{dCn}}}D`}{{{b{Aj}}{b{dCn}}}D`}{cc{}}00{{{b{dAn}}}{{b{dDb}}}}{AnDb}222222222{{DfDhDjDlCbCb}{{Cl{ce}}}l{{n{c}}}}0{{DnE`{Eb{Dh}}Dl}{{Cl{ce}}}l{{n{c}}}}{{DnDh{Eb{E`}}Dl}{{Cl{ce}}}l{{n{c}}}}{Dl{{Cl{ce}}}l{{n{c}}}}{{E`Dl}{{Cl{ce}}}l{{n{c}}}}0000{{E`DhE`Dl}{{Cl{ce}}}l{{n{c}}}}{{DfDhDjDhDlCbCb}{{Cl{ce}}}l{{n{c}}}}2{{E`DhCbDl}{{Cl{ce}}}l{{n{c}}}}{{E`DhEdCbCbDl}{{Cl{ce}}}l{{n{c}}}}7{{DnDh{Eb{E`}}DlCb}{{Cl{ce}}}l{{n{c}}}}6{{}{{Cl{ce}}}l{{n{c}}}}{{DfE`Dl}{{Cl{ce}}}l{{n{c}}}}45{{E`EdEfDl}{{Cl{ce}}}l{{n{c}}}}{{EhEhDl}{{Cl{ce}}}l{{n{c}}}}={{{Eb{Ed}}Dl}{{Cl{ce}}}l{{n{c}}}}{{DfDhDjDlCb}{{Cl{ce}}}l{{n{c}}}}0{{E`E`{Eb{Dh}}Dl}{{Cl{ce}}}l{{n{c}}}}11;{{E`{Eb{Ed}}Dl}{{Cl{ce}}}l{{n{c}}}}0{{DfDhDjDlCbCb}{{Cl{ce}}}l{{n{c}}}}0>00{{E`E`Dl}{{Cl{ce}}}l{{n{c}}}}{{E`DhDl}{{Cl{ce}}}l{{n{c}}}}2{{E`Dl}{{Cl{ce}}}l{{n{c}}}}21{{{Bj{An}}Cb}{{A`{ce}}}l{{n{c}}}}4{{{b{Bl}}}{{`{{C`{}{{Bn{{El{{El{EjAn}}Cf}}}}}}}}}}{{{b{Bl}}{b{Ah}}}{{`{{C`{}{{Bn{{El{{El{EjAn}}Cf}}}}}}}}}}{{{b{{f{ce}}}}}{{`{{C`{}{{Bn{{El{{El{EjAn}}An}}}}}}}}}l{{n{c}}}}{{{b{{f{ce}}}}EjAn}Anl{{n{c}}}}1{{{b{Ad}}{b{dc}}}AlEn}``{ce{}{}}00000000000{DbAn}{{{b{Bd}}{b{Ej}}{b{An}}}Cb}``{{{b{{f{ce}}}}}{{`{{C`{}{{Bn{F`}}}}}}}l{{n{c}}}}{{{b{Bl}}{b{Ah}}}{{b{{B`{F`}}}}}}`{{{b{d{f{ce}}}}}All{{n{c}}}}`{{{b{{B`{Bh}}}}Cb}{{A`{ce}}}l{{n{c}}}}{{CbCb}Ab}{{Ej{A`{ce}}Ej{b{{B`{Bh}}}}BfAf}{{f{ce}}}l{{n{c}}}}{{}Ab}{{{b{{f{ce}}}}}hl{{n{c}}}}`5`{{{b{n}}}{{b{{`{Fb}}}}}}{{{b{{f{ce}}}}}Fdl{{n{c}}}}{{{b{Bl}}}{{b{{B`{Fd}}}}}}{{{b{{f{ce}}}}FfBf}Bhl{{n{c}}}}{{{b{{f{ce}}}}FfBf}Anl{{n{c}}}}{{{b{{f{ce}}}}Bh}{{El{AnCb}}}l{{n{c}}}}{{{b{dBd}}EjAn}Aj}{{{b{dBd}}EjAn}An}{{{b{d{f{ce}}}}{b{de}}{b{dc}}Bf}{{Eb{{El{BfCd}}}}}l{{n{c}}}}>{{{b{d{f{ce}}}}{b{de}}{b{dc}}}Cdl{{n{c}}}}{{{b{d{f{ce}}}}Bb}All{{n{c}}}}{{{b{d{f{ce}}}}Cj}All{{n{c}}}}{{{b{d{f{ce}}}}Fd}All{{n{c}}}}{{{b{d{f{ce}}}}BhAnCb}All{{n{c}}}}{{{b{d{f{ce}}}}Fh}All{{n{c}}}}{{{b{Bl}}}Ah}`{{{b{Bl}}}{{b{{B`{Bf}}}}}}`{{{b{c}}}e{}{}}00000{{{b{{f{ce}}}}}Fhl{{n{c}}}}{c{{Fj{e}}}{}{}}00000000000000000000000{{{b{c}}}Fl{}}00000000000`{ce{}{}}00000000000{{{b{{f{ce}}}}}{{b{Bl}}}l{{n{c}}}}{{{b{d{f{ce}}}}FfBfAn}All{{n{c}}}}{{{b{d{f{ce}}}}EjAnAn}All{{n{c}}}}```````````````````````````{{{b{c}}}{{b{e}}}{}{}}00000000000000{{{b{dc}}}{{b{de}}}{}{}}00000000000000{{{b{E`}}}E`}{{{b{Dh}}}Dh}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Eh}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Df}}}Df}{{{b{Dn}}}Dn}{{{b{Dj}}}Dj}{{{b{c}}{b{de}}}Al{}{}}000000000000{{{b{c}}}Al{}}0000000000000000000000000{{{b{Dl}}{b{dCn}}}D`}{{{b{E`}}{b{dCn}}}D`}{{{b{Dh}}{b{dCn}}}D`}{{{b{Ed}}{b{dCn}}}D`}{{{b{Ef}}{b{dCn}}}D`}{{{b{Fn}}{b{dCn}}}D`}{{{b{G`}}{b{dCn}}}D`}{{{b{Gb}}{b{dCn}}}D`}{{{b{Eh}}{b{dCn}}}D`}{{{b{Gd}}{b{dCn}}}D`}{{{b{Gf}}{b{dCn}}}D`}{{{b{Df}}{b{dCn}}}D`}{{{b{Dn}}{b{dCn}}}D`}{{{b{Gh}}{b{dCn}}}D`}{{{b{Dj}}{b{dCn}}}D`}{cc{}}0000000000{G`Df}1{E`Df}{EdDf}{GbDf}{EhDf}{GdDf}{EdDn}7{E`Dn}8{EhDj}{GbDj}{G`Dj}{E`Dj}<`{ce{}{}}00000000000000{{AdBfAb}Dl}{BhGf}`{{{b{c}}}e{}{}}000000000000{c{{Fj{e}}}{}{}}00000000000{Df{{Fj{Dnc}}}{}}11111111111111{Df{{Fj{G`c}}}{}}{Df{{Fj{Gbc}}}{}}{Df{{Fj{Ehc}}}{}}{Df{{Fj{Gdc}}}{}}{Df{{Fj{Edc}}}{}}6{Df{{Fj{E`c}}}{}}7{Dn{{Fj{E`c}}}{}}{Dn{{Fj{Edc}}}{}}9{Dj{{Fj{G`c}}}{}}{Dj{{Fj{Gbc}}}{}}{Dj{{Fj{E`c}}}{}}{Dj{{Fj{Ehc}}}{}}={{{b{c}}}Fl{}}00000000000000{ce{}{}}00000000000000````````{GjGj}{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{Fb}}FhGjGl}Gn}{{{b{H`}}FhGjGl}Gn}{{{b{Gj}}}Gj}{{{b{c}}{b{de}}}Al{}{}}{{{b{c}}}Al{}}{{}Gn}{{{b{H`}}{b{dCn}}}D`}{{{b{Gj}}{b{dCn}}}D`}{{{b{Gn}}{b{dCn}}}D`}{cc{}}0{{{Hb{An}}}Gn}01{AnGn}????{{{b{Gj}}}h}{{{b{dGj}}}{{Eb{c}}}{}}{{{b{Gj}}}{{El{h{Eb{h}}}}}}{{{b{c}}}e{}{}}{c{{Fj{e}}}{}{}}00000{{{b{c}}}Fl{}}00{ce{}{}}00{{GnHd}Gn}`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{d{Hf{c}}}}AjAn}Bf{}}{{{b{d{Hf{c}}}}An}{{A`{c{Hf{c}}}}}l}{{{b{d{Hf{c}}}}An}{{Bj{Bh}}}l}{{{b{{Hf{c}}}}{b{dCn}}}D`Dd}{cc{}}8{{{b{{Hf{c}}}}{b{Ej}}{b{An}}}Cb{}}{{{b{{B`{{El{Hh{A`{c{Hf{c}}}}}}}}}}}{{Hf{c}}}l}{{{b{d{Hf{c}}}}EjAn}Aj{}}==<;","D":"AKh","p":[[1,"reference"],[0,"mut"],[5,"VirtualMachine",0,607],[1,"usize"],[10,"CallframeInterface",608],[10,"Tracer",609],[10,"World",0],[5,"Program",0,610],[5,"ModeRequirements",0,611],[6,"Predicate",0,612],[5,"Settings",0,607],[5,"Snapshot",0,613],[5,"StorageSlot",0],[1,"unit"],[5,"U256",614],[1,"slice"],[1,"u128"],[10,"StorageInterface",0],[1,"u32"],[1,"u8"],[5,"Vec",615],[5,"WorldDiff",0,613],[17,"Item"],[10,"Iterator",616],[1,"bool"],[6,"ExecutionEnd",0,617],[5,"StorageChange",0,613],[5,"Event",608],[5,"Flags",608],[5,"Instruction",0,617],[5,"Formatter",618],[8,"Result",618],[5,"FatPointer",0,619],[10,"Debug",618],[6,"AnySource",284],[5,"Register2",284],[6,"AnyDestination",284],[5,"Arguments",284],[6,"RegisterOrImmediate",284],[5,"Register1",284],[6,"Option",620],[5,"Immediate1",284],[5,"Immediate2",284],[5,"AdvanceStackPointer",284],[5,"H160",614],[1,"tuple"],[10,"Hasher",621],[5,"L2ToL1Log",608],[10,"Precompiles",540],[1,"i32"],[5,"HeapId",608],[1,"u16"],[6,"Result",622],[5,"TypeId",623],[5,"RegisterAndImmediate",284],[5,"AbsoluteStack",284],[5,"RelativeStack",284],[5,"CodePage",284],[5,"Register",284],[5,"NotRegisterOrImmediate",284],[5,"PrecompileMemoryReader",540],[1,"u64"],[5,"PrecompileOutput",540],[5,"LegacyPrecompiles",540,624],[1,"array"],[6,"CycleStats",609],[5,"TestWorld",591],[8,"Address",625]],"r":[[2,617],[3,619],[11,617],[12,611],[14,612],[15,610],[18,607],[19,613],[21,613],[25,607],[27,613],[540,626],[541,626],[542,624],[546,626],[547,626]],"b":[[110,"impl-From%3C%26mut+U256%3E-for-%26mut+FatPointer"],[111,"impl-From%3CU256%3E-for-FatPointer"],[419,"impl-From%3CAbsoluteStack%3E-for-AnySource"],[421,"impl-From%3CRegister1%3E-for-AnySource"],[422,"impl-From%3CImmediate1%3E-for-AnySource"],[423,"impl-From%3CRelativeStack%3E-for-AnySource"],[424,"impl-From%3CAdvanceStackPointer%3E-for-AnySource"],[425,"impl-From%3CCodePage%3E-for-AnySource"],[426,"impl-From%3CImmediate1%3E-for-RegisterOrImmediate"],[428,"impl-From%3CRegister1%3E-for-RegisterOrImmediate"],[430,"impl-From%3CAdvanceStackPointer%3E-for-AnyDestination"],[431,"impl-From%3CRelativeStack%3E-for-AnyDestination"],[432,"impl-From%3CAbsoluteStack%3E-for-AnyDestination"],[433,"impl-From%3CRegister1%3E-for-AnyDestination"],[494,"impl-TryInto%3CAbsoluteStack%3E-for-AnySource"],[495,"impl-TryInto%3CRelativeStack%3E-for-AnySource"],[496,"impl-TryInto%3CAdvanceStackPointer%3E-for-AnySource"],[497,"impl-TryInto%3CCodePage%3E-for-AnySource"],[498,"impl-TryInto%3CImmediate1%3E-for-AnySource"],[500,"impl-TryInto%3CRegister1%3E-for-AnySource"],[502,"impl-TryInto%3CRegister1%3E-for-RegisterOrImmediate"],[503,"impl-TryInto%3CImmediate1%3E-for-RegisterOrImmediate"],[505,"impl-TryInto%3CAbsoluteStack%3E-for-AnyDestination"],[506,"impl-TryInto%3CRelativeStack%3E-for-AnyDestination"],[507,"impl-TryInto%3CRegister1%3E-for-AnyDestination"],[508,"impl-TryInto%3CAdvanceStackPointer%3E-for-AnyDestination"],[566,"impl-From%3C%5BU256;+3%5D%3E-for-PrecompileOutput"],[567,"impl-From%3C%5BU256;+2%5D%3E-for-PrecompileOutput"],[569,"impl-From%3CU256%3E-for-PrecompileOutput"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIMBIAAgAC0ATwAAAFEAAABVAAEAWAAEAF8ADABvAAEAqwADALAAAADBAAAAygAAAM8AAADRAAIA2QAEAOIAKgAOAQsAGwEBADgBYACkAQAApgEFAK0BAACvAQMAxwFXACMCAQAmAgUALQIHADcCAQA6AgAAPgIQAFECBQBZAgAAWwIEAA=="}],\
["zksync_vm2_interface",{"t":"PPPPPPKGPPPPGPPPPPPPPPFPTTTPFKFPPPPPFPPPPPPPPGKPPPPPPPPPGPPPPPPPPPGKPPPPPPPKPPTPMONNNMMNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNNNNNNNNOMMMNNNNNNNNNNNNNNNNNNMMMMMONNNNMMNNNNNNNNNNOMMOMOOMOMNNCMMMMMMMMMMMMMMMMMMMMMMOOMNNNNNNNNMNNNNNNNNNNNNNNNNNNOONNNNNNNNNOONNNNNNNNNMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFKKTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Add","And","AuxHeapRead","AuxHeapWrite","AuxMutating0","Caller","CallframeInterface","CallingMode","CodeAddress","ContextMeta","ContextU128","Continue","CycleStats","Decommit","Decommit","Delegate","Div","EcAdd","EcMul","EcPairing","EcRecover","ErgsLeft","Event","Event","FIRST","FIRST_AUX","FIRST_CALLDATA","FarCall","Flags","GlobalStateInterface","HeapId","HeapRead","HeapWrite","IncrementTxNumber","Jump","Keccak256","L2ToL1Log","L2ToL1Message","Mimic","ModExp","Mul","NearCall","Nop","Normal","Normal","Opcode","OpcodeType","Or","Panic","PointerAdd","PointerPack","PointerRead","PointerShrink","PointerSub","PrecompileCall","Ret","ReturnType","Revert","RotateLeft","RotateRight","SP","Secp256r1Verify","SetContextU128","Sha256","ShiftLeft","ShiftRight","ShouldStop","StateInterface","Stop","StorageRead","StorageRead","StorageWrite","StorageWrite","Sub","This","Tracer","TransientStorageRead","TransientStorageWrite","VALUE","Xor","address","address","after_instruction","after_instruction","as_u32","aux_heap","aux_heap_bound","before_instruction","before_instruction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","callframe","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","code_address","context_u128","context_u128_register","current_frame","eq","eq","eq","eq","eq","eq","eq","eq","equal","events","exception_handler","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gas","get_storage","get_storage_state","get_transient_storage","get_transient_storage_state","greater","hash","hash","hash","hash","heap","heap_bound","into","into","into","into","into","into","into","into","into","is_failure","is_first","is_kernel","is_near_call","is_service","is_static","key","key","l2_to_l1_logs","less_than","number_of_callframes","on_extra_prover_cycles","on_extra_prover_cycles","opcodes","program_counter","pubdata","read_contract_code","read_heap_byte","read_heap_u256","read_register","read_stack","set_address","set_aux_heap_bound","set_caller","set_code_address","set_context_u128","set_context_u128_register","set_exception_handler","set_flags","set_gas","set_heap_bound","set_program_counter","set_pubdata","set_register","set_stack_pointer","set_transaction_number","shard_id","shard_id","stack_pointer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_number","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_number","tx_number","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_heap_u256","write_stack","write_transient_storage","Add","And","AuxHeapRead","AuxHeapWrite","AuxMutating0","Caller","CodeAddress","ContextMeta","ContextU128","Decommit","Delegate","Div","ErgsLeft","Event","FarCall","HeapRead","HeapWrite","IncrementTxNumber","Jump","L2ToL1Message","Mimic","Mul","NearCall","Nop","Normal","Or","Panic","PointerAdd","PointerPack","PointerRead","PointerShrink","PointerSub","PrecompileCall","Ret","Revert","RotateLeft","RotateRight","SP","SetContextU128","ShiftLeft","ShiftRight","StorageRead","StorageWrite","Sub","This","TransientStorageRead","TransientStorageWrite","TypeLevelCallingMode","TypeLevelReturnType","VALUE","VALUE","Xor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"zksync_vm2_interface"],[287,"zksync_vm2_interface::opcodes"],[771,"zksync_vm2_interface::state_interface"],[772,"primitive_types"],[773,"zksync_vm2_interface::tracer_interface"],[774,"core::iter::traits::iterator"],[775,"core::fmt"],[776,"core::hash"],[777,"core::option"],[778,"core::result"],[779,"core::any"],[780,"zksync_vm2_interface::tracer_interface::opcodes"]],"i":[16,16,16,16,16,16,0,0,16,16,16,6,0,16,19,17,16,19,19,19,19,16,0,16,8,8,8,16,0,0,0,16,16,16,16,19,0,16,17,19,16,16,16,17,18,0,0,16,18,16,16,16,16,16,16,16,0,18,16,16,16,19,16,19,16,16,0,0,6,16,19,16,19,16,16,0,16,16,86,16,1,15,5,5,8,1,1,5,5,13,8,14,15,16,17,18,6,19,13,8,14,15,16,17,18,6,19,1,11,13,8,14,15,16,17,18,19,13,8,14,15,16,17,18,19,13,13,8,8,14,14,15,15,16,16,17,17,18,18,19,19,1,1,11,11,13,8,14,15,16,17,18,19,13,11,1,11,13,8,14,15,16,17,18,6,19,13,8,14,15,16,17,18,6,19,1,7,11,11,11,13,13,16,17,18,1,1,13,8,14,15,16,17,18,6,19,18,14,1,1,15,1,14,15,11,13,11,5,5,0,1,11,1,11,11,11,1,1,1,1,1,1,11,1,11,1,1,1,11,11,1,11,14,15,1,13,8,14,15,16,17,18,19,11,13,8,14,15,16,17,18,6,19,13,8,14,15,16,17,18,6,19,14,15,13,8,14,15,16,17,18,6,19,14,15,13,8,14,15,16,17,18,6,19,11,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,80,0,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,83,84,85],"f":"````````````````````````````````````````````````````````````````````````````````{{{d{b}}}f}`{{{d{hj}}{d{hc}}}ln}0{A`Ab}{{{d{b}}}A`}{{{d{b}}}Ab}{{{d{hj}}{d{hc}}}Adn}0{{{d{c}}}{{d{e}}}{}{}}00000000{{{d{hc}}}{{d{he}}}{}{}}000000007{{{d{hAf}}Ah}{{`{b}}}}{{{d{Aj}}}Aj}{{{d{A`}}}A`}{{{d{Al}}}Al}{{{d{An}}}An}{{{d{B`}}}B`}{{{d{Bb}}}Bb}{{{d{Bd}}}Bd}{{{d{Bf}}}Bf}{{{d{c}}{d{he}}}Ad{}{}}0000000{{{d{c}}}Ad{}}000000000000000{{{d{b}}}f}{{{d{b}}}Bh}{{{d{Af}}}Bh}{{{d{hAf}}}{{`{b}}}}{{{d{Aj}}{d{Aj}}}Bj}{{{d{A`}}{d{A`}}}Bj}{{{d{Al}}{d{Al}}}Bj}{{{d{An}}{d{An}}}Bj}{{{d{B`}}{d{B`}}}Bj}{{{d{Bb}}{d{Bb}}}Bj}{{{d{Bd}}{d{Bd}}}Bj}{{{d{Bf}}{d{Bf}}}Bj}`{{{d{Af}}}{{`{{Bn{}{{Bl{Al}}}}}}}}{{{d{b}}}C`}{{{d{Af}}}Aj}{{{d{Aj}}{d{hCb}}}Cd}{{{d{A`}}{d{hCb}}}Cd}{{{d{Al}}{d{hCb}}}Cd}{{{d{An}}{d{hCb}}}Cd}{{{d{B`}}{d{hCb}}}Cd}{{{d{Bb}}{d{hCb}}}Cd}{{{d{Bd}}{d{hCb}}}Cd}{{{d{l}}{d{hCb}}}Cd}{{{d{Bf}}{d{hCb}}}Cd}{cc{}}00000000{{{d{b}}}Ab}{{{d{hn}}fCf}Cf}{{{d{Af}}}{{`{{Bn{}{{Bl{{Ch{{Ch{fCf}}Cf}}}}}}}}}}{{{d{Af}}fCf}Cf}1`{{{d{Aj}}{d{hc}}}AdCj}{{{d{B`}}{d{hc}}}AdCj}{{{d{Bb}}{d{hc}}}AdCj}{{{d{Bd}}{d{hc}}}AdCj}{{{d{b}}}A`}8{ce{}{}}00000000{{{d{Bd}}}Bj}`{{{d{b}}}Bj}0`0``{{{d{Af}}}{{`{{Bn{}{{Bl{An}}}}}}}}`{{{d{Af}}}Ah}{{{d{hj}}Bf}Ad}0`{{{d{b}}}{{Cl{C`}}}}{{{d{Af}}}Cn}{{{d{b}}C`}Cf}{{{d{Af}}A`Ab}D`}{{{d{Af}}A`Ab}Cf}{{{d{Af}}D`}{{Ch{CfBj}}}}{{{d{b}}C`}{{Ch{CfBj}}}}{{{d{hb}}f}Ad}{{{d{hb}}Ab}Ad}11{{{d{hb}}Bh}Ad}{{{d{hAf}}Bh}Ad}{{{d{hb}}C`}Ad}{{{d{hAf}}Aj}Ad}441{{{d{hAf}}Cn}Ad}{{{d{hAf}}D`CfBj}Ad}3{{{d{hAf}}C`}Ad}``{{{d{b}}}C`}{{{d{c}}}e{}{}}0000000{{{d{Af}}}C`}{c{{Db{e}}}{}{}}00000000000000000``{{{d{c}}}Dd{}}00000000``{ce{}{}}00000000{{{d{hAf}}A`AbCf}Ad}{{{d{hb}}C`CfBj}Ad}{{{d{hAf}}fCfCf}Ad}````````````````````````````````````````````````````{{{d{c}}}{{d{e}}}{}{}}00000000000000000000000000000000000000000000000{{{d{hc}}}{{d{he}}}{}{}}00000000000000000000000000000000000000000000000{{{d{Df}}{d{hCb}}}Cd}{{{d{Dh}}{d{hCb}}}Cd}{{{d{Dj}}{d{hCb}}}Cd}{{{d{Dl}}{d{hCb}}}Cd}{{{d{Dn}}{d{hCb}}}Cd}{{{d{E`}}{d{hCb}}}Cd}{{{d{Eb}}{d{hCb}}}Cd}{{{d{Ed}}{d{hCb}}}Cd}{{{d{Ef}}{d{hCb}}}Cd}{{{d{Eh}}{d{hCb}}}Cd}{{{d{Ej}}{d{hCb}}}Cd}{{{d{El}}{d{hCb}}}Cd}{{{d{En}}{d{hCb}}}Cd}{{{d{F`}}{d{hCb}}}Cd}{{{d{Fb}}{d{hCb}}}Cd}{{{d{Fd}}{d{hCb}}}Cd}{{{d{Ff}}{d{hCb}}}Cd}{{{d{Fh}}{d{hCb}}}Cd}{{{d{Fj}}{d{hCb}}}Cd}{{{d{Fl}}{d{hCb}}}Cd}{{{d{Fn}}{d{hCb}}}Cd}{{{d{G`}}{d{hCb}}}Cd}{{{d{Gb}}{d{hCb}}}Cd}{{{d{Gd}}{d{hCb}}}Cd}{{{d{Gf}}{d{hCb}}}Cd}{{{d{Gh}}{d{hCb}}}Cd}{{{d{Gj}}{d{hCb}}}Cd}{{{d{Gl}}{d{hCb}}}Cd}{{{d{Gn}}{d{hCb}}}Cd}{{{d{H`}}{d{hCb}}}Cd}{{{d{Hb}}{d{hCb}}}Cd}{{{d{Hd}}{d{hCb}}}Cd}{{{d{Hf}}{d{hCb}}}Cd}{{{d{Hh}}{d{hCb}}}Cd}{{{d{Hj}}{d{hCb}}}Cd}{{{d{Hl}}{d{hCb}}}Cd}{{{d{Hn}}{d{hCb}}}Cd}{{{d{I`}}{d{hCb}}}Cd}{{{d{Ib}}{d{hCb}}}Cd}{{{d{Id}}{d{hCb}}}Cd}{{{d{If}}{d{hCb}}}Cd}{{{d{{Ih{c}}}}{d{hCb}}}Cd{IjIl}}{{{d{{In{c}}}}{d{hCb}}}Cd{IjJ`}}{{{d{Jb}}{d{hCb}}}Cd}{{{d{Jd}}{d{hCb}}}Cd}{{{d{Jf}}{d{hCb}}}Cd}{{{d{Jh}}{d{hCb}}}Cd}{{{d{Jj}}{d{hCb}}}Cd}{cc{}}00000000000000000000000000000000000000000000000{ce{}{}}00000000000000000000000000000000000000000000000{c{{Db{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{d{c}}}Dd{}}00000000000000000000000000000000000000000000000222222222222222222222222222222222222222222222222","D":"BBl","p":[[10,"CallframeInterface",0,771],[1,"reference"],[5,"H160",772],[0,"mut"],[10,"Tracer",0,773],[6,"ShouldStop",0,773],[10,"GlobalStateInterface",0,771],[5,"HeapId",0,771],[1,"u32"],[1,"unit"],[10,"StateInterface",0,771],[1,"usize"],[5,"Flags",0,771],[5,"Event",0,771],[5,"L2ToL1Log",0,771],[6,"Opcode",0,773],[6,"CallingMode",0,773],[6,"ReturnType",0,773],[6,"CycleStats",0,773],[1,"u128"],[1,"bool"],[17,"Item"],[10,"Iterator",774],[1,"u16"],[5,"Formatter",775],[8,"Result",775],[5,"U256",772],[1,"tuple"],[10,"Hasher",776],[6,"Option",777],[1,"i32"],[1,"u8"],[6,"Result",778],[5,"TypeId",779],[5,"Nop",287,780],[5,"Add",287,780],[5,"Sub",287,780],[5,"And",287,780],[5,"Or",287,780],[5,"Xor",287,780],[5,"ShiftLeft",287,780],[5,"ShiftRight",287,780],[5,"RotateLeft",287,780],[5,"RotateRight",287,780],[5,"Mul",287,780],[5,"Div",287,780],[5,"NearCall",287,780],[5,"Jump",287,780],[5,"Event",287,780],[5,"L2ToL1Message",287,780],[5,"Decommit",287,780],[5,"This",287,780],[5,"Caller",287,780],[5,"CodeAddress",287,780],[5,"ErgsLeft",287,780],[5,"SP",287,780],[5,"ContextMeta",287,780],[5,"ContextU128",287,780],[5,"SetContextU128",287,780],[5,"IncrementTxNumber",287,780],[5,"AuxMutating0",287,780],[5,"PrecompileCall",287,780],[5,"HeapRead",287,780],[5,"HeapWrite",287,780],[5,"AuxHeapRead",287,780],[5,"AuxHeapWrite",287,780],[5,"PointerRead",287,780],[5,"PointerAdd",287,780],[5,"PointerSub",287,780],[5,"PointerPack",287,780],[5,"PointerShrink",287,780],[5,"StorageRead",287,780],[5,"StorageWrite",287,780],[5,"TransientStorageRead",287,780],[5,"TransientStorageWrite",287,780],[5,"FarCall",287,780],[10,"Debug",775],[10,"TypeLevelCallingMode",287,780],[5,"Ret",287,780],[10,"TypeLevelReturnType",287,780],[5,"Normal",287,780],[5,"Delegate",287,780],[5,"Mimic",287,780],[5,"Revert",287,780],[5,"Panic",287,780],[10,"OpcodeType",0]],"r":[[6,771],[7,773],[12,773],[22,771],[28,771],[29,771],[30,771],[36,771],[45,773],[46,773],[56,773],[66,773],[67,771],[75,773],[209,773],[287,780],[288,780],[289,780],[290,780],[291,780],[292,780],[293,780],[294,780],[295,780],[296,780],[297,780],[298,780],[299,780],[300,780],[301,780],[302,780],[303,780],[304,780],[305,780],[306,780],[307,780],[308,780],[309,780],[310,780],[311,780],[312,780],[313,780],[314,780],[315,780],[316,780],[317,780],[318,780],[319,780],[320,780],[321,780],[322,780],[323,780],[324,780],[325,780],[326,780],[327,780],[328,780],[329,780],[330,780],[331,780],[332,780],[333,780],[334,780],[335,780],[338,780]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAO0BHwABAAUACQACAA4AAAARAAAAFgAAABgAAAAcAAAAIAADACYAAAApAAIAMAAAADIABgA7AAIAPwAAAEEAAQBGAAAASAAAAEoAAQBNAAEAUAAAAFoAEQBuAB8AkgAHAJ4ACAC2AAMA7AAHAPUAEQAJAQgAFAEIAFQBjwBEAr8A"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
